let metaData = new Map();
let services = new Map();
let components = new Map();

function newCall(Cls, args = []) {
    args.unshift(Cls);
    return new (Function.prototype.bind.apply(Cls, args));
}

export function Injectable(){
    return (target, property, descriptor) => {
        services.set(target.name, target);
    }
}

export function Component(metadata) {
    return (target, property, descriptor) => {
        components.set(target.name, metadata);
    }
}

export function bootstrap(className) {
    var name = className.name;
    if (!components.has(name)) {
        throw new Error("ni shi sb");
    }
    var metaData = components.get(name);
    var args = [];
    if (metaData.hasOwnProperty("services")) {
        metaData.services.forEach(function (service) {
            if (services.has(service)) {
                var serviceCls = services.get(service);
                args.push(new serviceCls());
            }
        })
    }
    var tmp = newCall(className, args);
    tmp.is = metaData.is;
    tmp.instance = className;
    tmp.anuInit();
    return tmp;
}
